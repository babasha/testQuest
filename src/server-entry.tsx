// src/server-entry.tsx - –°–µ—Ä–≤–µ—Ä–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞
import { render } from 'preact-render-to-string'
import { createElement } from 'preact'

import { App } from './app'

export interface SSRContext {
  url: string
  userAgent?: string
  headers?: Record<string, string>
}

export async function renderToString(context: SSRContext) {
  try {
    console.log(`üîç SSR —Ä–µ–Ω–¥–µ—Ä: ${context.url}`)
    
    const initialData = {
      url: context.url,
      timestamp: new Date().toISOString(),
      userAgent: context.userAgent || 'server'
    }
    
    // –†–µ–Ω–¥–µ—Ä–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    const html = render(createElement(App, { initialData }))
    
    return {
      html,
      initialData
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ SSR —Ä–µ–Ω–¥–µ—Ä–∞:', error)
    throw error
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è dev —Ä–µ–∂–∏–º–∞ —Å Vite
export default renderToString